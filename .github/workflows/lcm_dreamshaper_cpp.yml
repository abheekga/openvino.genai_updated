name: lcm_dreamshaper

on:
  pull_request:
    paths:
      - image_generation/lcm_dreamshaper_v7/cpp/**
      - image_generation/common/**
      - samples/requirements.txt
      - .github/workflows/lcm_dreamshaper_cpp.yml
      - thirdparty/openvino_tokenizers
      - "!**.md"

permissions: read-all  # Required by https://github.com/ossf/scorecard/blob/e23b8ad91fd6a64a0a971ca4fc0a4d1650725615/docs/checks.md#token-permissions

env:
  PYTHON_VERSION: '3.8'
  working_directory: "./image_generation/lcm_dreamshaper_v7/cpp/"
  LINUX_OV_ARCHIVE_URL: "https://storage.openvinotoolkit.org/repositories/openvino/packages/nightly/2024.4.0-16311-2c8fd1e6e97/l_openvino_toolkit_ubuntu20_2024.4.0.dev20240809_x86_64.tgz"
  OV_INSTALL_DIR: ${{ github.workspace }}/ov

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lcm_dreamshaper_v7_cpp-linux:
    runs-on: ubuntu-20.04
    defaults:
      run:
        # Do not ignore bash profile files. From:
        # https://github.com/marketplace/actions/setup-miniconda#important
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download OpenVINO archive
        id: openvino_download
        run: |
          wget ${{ env.LINUX_OV_ARCHIVE_URL}} --progress=bar:force:noscroll -O openvino_package.tar.gz
          mkdir ${OV_INSTALL_DIR}
          tar -xzf openvino_package.tar.gz -C ${OV_INSTALL_DIR} --strip-components=1

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
        
      - name: Create virtual environment
        run: python3 -m venv openvino_lcm_cpp
      
      - name: Install python dependencies
        working-directory: ${{ env.working_directory }}
        run: |
          source openvino_lcm_cpp/bin/activate
          python -m pip install ../../../thirdparty/openvino_tokenizers/[transformers] --pre --extra-index-url https://storage.openvinotoolkit.org/simple/wheels/nightly
          python -m pip install -r ../../requirements.txt --pre --extra-index-url https://storage.openvinotoolkit.org/simple/wheels/nightly
          
      - name: Download and convert model and tokenizer
        working-directory: ${{ env.working_directory }}
        run: |
          source openvino_lcm_cpp/bin/activate
          optimum-cli export openvino --model SimianLuo/LCM_Dreamshaper_v7 models/lcm_dreamshaper_v7/FP16

      - name: Build app
        working-directory: ${{ env.working_directory }}
        run: |
          source ${OV_INSTALL_DIR}/setupvars.sh
          cmake -DCMAKE_BUILD_TYPE=Release -S ./ -B ./build/
          cmake --build ./build/ --config Release --parallel
      
      - name: Run app
        working-directory: ${{ env.working_directory }}
        run: |
          source ${OV_INSTALL_DIR}/setupvars.sh
          ./build/lcm_dreamshaper

  lcm_dreamshaper_v7_cpp-windows:
    # TODO Enable windows job
    if: false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          activate-environment: openvino_lcm_cpp
          python-version: "3.10"

      - name: Install OpenVINO and other conda dependencies
        run: |
          conda activate openvino_lcm_cpp
          conda update -c conda-forge --all
          conda install -c conda-forge -c conda-forge/label/openvino_dev openvino==2024.4.0.dev20240726 c-compiler cxx-compiler git make cmake
          conda env config vars set LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH
      
      - name: Install python dependencies
        working-directory: ${{ env.working_directory }}
        run: |
          conda activate openvino_lcm_cpp
          python -m pip install ../../../thirdparty/openvino_tokenizers/[transformers] --pre --extra-index-url https://storage.openvinotoolkit.org/simple/wheels/nightly
          python -m pip install -r ../../requirements.txt --pre --extra-index-url https://storage.openvinotoolkit.org/simple/wheels/nightly

      - name: Download and convert model and tokenizer
        working-directory: ${{ env.working_directory }}
        run: |
          conda activate openvino_lcm_cpp
          optimum-cli export openvino --model SimianLuo/LCM_Dreamshaper_v7 models/lcm_dreamshaper_v7/FP16
  
      - name: Build app
        working-directory: ${{ env.working_directory }}
        run: |
          conda activate openvino_lcm_cpp
          cmake -DCMAKE_BUILD_TYPE=Release -S ./ -B ./build/
          cmake --build ./build/ --config Release --parallel
      
      - name: Run app
        working-directory: ${{ env.working_directory }}
        run: '& "./build/Release/lcm_dreamshaper.exe" -r --dynamic'

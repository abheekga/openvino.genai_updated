name: Coverity (Ubuntu 22.04, Python 3.11)
on:
  workflow_dispatch:
  schedule:
    # run daily at 00:00
    - cron: '0 0 * * *'
  pull_request:
    paths:
      - '.github/workflows/coverity.yml'

permissions: read-all # Required by https://github.com/ossf/scorecard/blob/e23b8ad91fd6a64a0a971ca4fc0a4d1650725615/docs/checks.md#token-permissions

concurrency:
  group: ${{ github.ref }}-genai-cov-linux
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.11'
  OV_BRANCH: ${{ github.base_ref || github.event.merge_group.base_ref || github.ref }}

jobs:
  openvino_download:
    name: Download OpenVINO
    outputs:
      status: ${{ steps.openvino_download.outcome }}
      ov_artifact_name: ${{ steps.openvino_download.outputs.ov_artifact_name }}
      ov_wheel_source: ${{ steps.openvino_download.outputs.ov_wheel_source }}
      docker_tag: ${{ steps.get_docker_tag.outputs.docker_tag }}
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    runs-on: aks-linux-medium
    container:
      image: 'openvinogithubactions.azurecr.io/openvino_provider:0.1.0'
      volumes:
        - /mount:/mount
        - ${{ github.workspace }}:${{ github.workspace }}

    steps:
    - uses: openvinotoolkit/openvino/.github/actions/openvino_provider@master
      id: openvino_download
      with:
        platform: ubuntu22
        commit_packages_to_provide: wheels
        revision: latest_available_commit

    - name: Clone docker tag from OpenVINO repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: 'openvinotoolkit/openvino'
        path: 'openvino'
        ref: ${{ env.OV_BRANCH }}
        sparse-checkout: |
          .github/dockerfiles/docker_tag

    - name: Save docker tag to output
      id: get_docker_tag
      run: |
        docker_tag=$(cat openvino/.github/dockerfiles/docker_tag)
        echo "docker_tag=$docker_tag" >> $GITHUB_OUTPUT

  coverity_build:
    name: Build for coverity
    needs: [ openvino_download ]
    timeout-minutes: 20
    defaults:
      run:
        shell: bash
    runs-on: aks-linux-16-cores-64gb
    container:
      image: openvinogithubactions.azurecr.io/ov_build/ubuntu_22_04_x64:${{ needs.openvino_download.outputs.docker_tag }}
      volumes:
        - /mount:/mount
      options: -v ${{ github.workspace }}:${{ github.workspace }}
    env:
      CMAKE_GENERATOR: Unix Makefiles
      OV_INSTALL_DIR: ${{ github.workspace }}/ov
      INSTALL_DIR: ${{ github.workspace }}/install
      BUILD_DIR: ${{ github.workspace }}/build
      BUILD_TYPE: Release

    steps:
      - name: Clone openvino.genai
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: openvino.genai

      - name: Download OpenVINO package
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ needs.openvino_download.outputs.ov_artifact_name }}
          path: ${{ env.OV_INSTALL_DIR }}
          merge-multiple: true

      - name: Download & install coverity tool
        run: |
          wget https://ubit-artifactory-or.intel.com/artifactory/coverity-or-local/Enterprise/license.dat -O license.dat
          wget https://ubit-artifactory-or.intel.com/artifactory/coverity-or-local/Enterprise/cov-analysis-linux64-2024.6.1.sh -O cov-analysis-2024.6.1.sh
          chmod u+x cov-analysis-2024.6.1.sh
          ./cov-analysis-2024.6.1.sh --unattended --skip-license --prefix ${ENV_COV_TOOL_DIR}
          ./cov-analysis-2024.6.1.sh \
            -q \
            --installation.dir=${COVERITY_TOOL_DIR} \
            --license.agreement=agree \
            --license.region=0 \
            --license.type.choice=0 \
            --license.cov.path=${COVERITY_TOOL_DIR}/license.dat \
            --component.sdk=false \
            --component.skip.documentation=true
          rm cov-analysis-2024.6.1.sh
          export PATH=$PATH:${ENV_COV_TOOL_DIR}/bin/

      - name: Create config file for coverity build (create coverity artifacts)
        run: |
          cov-configure --template --compiler cc --comptype gcc --config coverity_config.xml
          cov-configure --template --compiler c++ --comptype g++ --config coverity_config.xml
          cov-configure --python --no-capture-config-files --version 3 --config coverity_config.xml
          cov-configure --template --compiler javascript --comptype javascript --config coverity_config.xml
          cov-configure --template --compiler python --comptype python --config coverity_config.xml
          cov-configure --template --compiler clangcc --comptype clangcc --config coverity_config.xml
          cov-configure --template --compiler clangcxx --comptype clangcxx --config coverity_config.xml
          cov-configure --template --compiler javac --comptype javac --config coverity_config.xml

      - name: Create build.sh
        run: |
          echo """
          mkdir -p ${{ github.workspace }}/build
          cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DBUILD_TOKENIZERS=NO -DOpenVINO_DIR=${OV_INSTALL_DIR}/runtime/cmake/ -DCMAKE_C_COMPILER_LAUNCHER= -DCMAKE_CXX_COMPILER_LAUNCHER= -B${BUILD_DIR} ${{ github.workspace }}/openvino.genai
          cmake --build ${BUILD_DIR} --config ${BUILD_TYPE} -j
          """ > build.sh

      - name: Build for coverity
        run: |
          cov-build --config coverity_config.xml --tmpdir cov_temp --dir ${BUILD_DIR}/cov-int --fs-capture-search .. sh build.sh

      - name: Exclude folders from analysis
        run: |
          cov-manage-emit --dir cov-int --tu-pattern "file('$INTEL_OPENVINO_DIR/.*')" delete
          cov-manage-emit --dir cov-int --tu-pattern "file('/build/_deps/.*')" delete
          cov-manage-emit --dir cov-int --tu-pattern "file('/tools/.*')" delete

      - name: Coverity - analyze created artifacts
        run: |
          cov-analyze \
            --dir cov-int \
            --concurrency \
            --security \
            --rule \
            --enable-constraint-fpp \
            --enable-fnptr \
            --enable-virtual \
            --enable-default \
            --webapp-security \
            --enable-audit-checkers \
            --enable-audit-mode \
            --fs-capture-search ${{ github.workspace }} \
            --strip-path ${{ github.workspace }}

      - name: Submit artefacts
        run: |
          cov-commit-defects \
            --dir cov-int \
            --stream OpenVINO-master-stream \
            --url  https://coverityent.devtools.intel.com/prod3 \
            --version "${{ github.sha }}" \
            --user <user> \
            --password <coverity> \
            --strip-path ${{ env.OPENVINO_REPO }} --noxrefs

      - name: Show Coverity configure logs
        continue-on-error: true
        run: cov-configure -c ${COVERITY_TOOL_DIR}/coverity_config.xml -lscc text

      - name: Upload Coverity build log
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: coverity_logs
          path: ${{ env.BUILD_DIR }}/cov-int/build-log.txt
          if-no-files-found: 'error'
